[{"created":1663330065084,"markdown":"Até então temos tratado apenas de arrays unidimensionais, porém também é possível ter arrays de 2, 3 ou mais dimensões, são os **arrays multidimensionais**. Eles são arrays de arrays! \n\n> Um array de 2 dimensões também é conhecido como **matriz** (ou *matrix* no inglês).\n\n***Importante: É importante saber que existem arrays de várias dimensões, porém nesse curso trataremos apenas de matrizes (arrays de 2 dimensões), que são os casos mais comumente cobrados em entrevistas técnicas.***\n\nAs matrizes também obedecem às mesmas regras dos arrays unidimensionais.\n- É um conjunto de dados do mesmo tipo\n- Tem o tamanho fixo e pré-definido\n- Cada posição na memória é identificada unicamente por índices\n\n![Exemplo de Matriz](/assets-site-nao-apagar/multidimensional-array-view.png)\n\n\nPerceba que uma matriz é um conjunto de arrays unidimensionais que são exibidos no formato de linhas e colunas onde a identidade de cada elemento está na combinação de uma linha com uma coluna. Ou seja, na matriz para encontrar um elemento é preciso ter acesso ao par de índices linha x coluna.\n\nVamos ver um pouco de código!\n\n~~~Java\n// declara e instancia uma matriz com 3 linhas e 5 colunas\nint[][] matrix = new int[3][5];\n\n// inserindo valores\nmatrix[0][0] = 5;\nmatrix[1][0] = 13;\nmatrix[0][1] = 12;\nmatrix[1][1] = 4;\n\nint res = matrix[2][4]; \n// res == 21\n~~~\n\nNote que:\n- Na criação da matriz é preciso identificar a quantidade de linhas e a quantidade de colunas.\n- Para inserir um elemento é preciso informar o índice da linha e o índice da coluna.\n- Para consultar um elemento também deve ser informado o par de índices linha x coluna.\n","url":"42a3dd4f-5e79-41a5-94fc-941e18fc83ad","modified":1663334789128,"title":"Definição","type":"text","order":1},{"type":"text","created":1663330890024,"modified":1663332158921,"markdown":"Na memória arrays multidimensionais são alocados da mesma maneira que arrays unidimensionais! Portanto, as células são alocadas de maneira sequencial e não da forma tabular como foi exibido anteriormente. Essa demonstração visual tabular server apenas para fins didáticos pois facilita a compreensão do funcionamento das matrizes.\n\n![Alocação de memória de uma matriz](/assets-site-nao-apagar/multidimensional-array-memory-allocation.png)\n\n","url":"679e8aa3-a31c-47d0-ae11-a7183311e3d1","title":"Matrizes na memória","order":2},{"modified":1663359904963,"created":1663353503897,"url":"9b635a46-9287-4ca0-8d04-cc1f569575af","title":"APAGAR","type":"quiz","markdown":"","questions":[],"order":4},{"modified":1663359930022,"created":1663359930022,"url":"a9319392-01c4-4201-8bd7-486d9ba01fae","order":3,"title":"Teste seus conhecimentos","markdown":"Aqui vão alguns exercícios para praticar:\n\n- [LeetCode 1672 - Richest Customer Wealth](https://leetcode.com/problems/richest-customer-wealth/)\n- [LeetCode 1351 - Count Negative Numbers in a Sorted Matrix](https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/)\n\n*Dica: Leia os problemas com atenção para entender o que deve ser feito e pense nas possíveis soluções antes de escrever o código.*","type":"text"}]