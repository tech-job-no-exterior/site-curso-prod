[{"questions":[{"items":["Seu diferencial é ser uma estrutura indexada e permite acesso direto por meio dos índices","Pode ser utilizada em um cenário com incertezas em relação à quantidade de elementos a serem armazenados","É uma estrutura performatica para operações de inserções","É melhor que LinkedList, Trees e Graphs para perguntas de entrevista ",""],"question":"Selecione a alteranativa correta sobre Array","explanation":"Revisite a lição 3 - Operações"},{"explanation":"Assista ao vídeo na lição 3 - Operações","items":["Tamanho fixo e posições indexadas","Tamanho variável e alocação aleatória na memória","Alocação sequencial na memória e rápida inserção","",""],"question":"Quais são as principais características de um array?"},{"explanation":"Lembre-se das principais caracteristicas de um array.","question":"Você já aprendeu que toda estrutura de dados é otimizada para realizar alguma(as) operações, mas não todas. Para qual das operações um array é otimizado?","items":["Leitura utilizando o índice","Inserção de novos elementos","Deleção de qualquer elemento","Percorrer todo o array",""]},{"explanation":"Revisite a lição 3 - Operações","items":["Acesso pelo índice: O(1)","Inserção: O(1)","Deleção: O(log n)","Percorrer o array: O(n * n)",""],"question":"Se, na entrevista, você precisar falar a complexidade de tempo das operações em um array, qual seria sua resposta?"},{"items":["É melhor inserir um elemento no meio de uma LinkedList do que no meio de um Array","LinkedList é melhor que Array para retornar o valor da última posição","Array é melhor que LinkedList  para deletar um valor no meio da estrutura","Arrays e LinkedList não são boas estruturas para serem utilizadas em entrevista técnica",""],"explanation":"Revisite o capítulo 2 do livro Grokking ALgortihms","question":"Em comparação com uma LinkedList, é correto afirmar que"}],"url":"09b6b136-a842-4173-a850-f0ab1359e41d","type":"quiz","markdown":null,"order":4,"modified":1663617189613,"created":1663615408966,"title":"Teste seus conhecimentos"},{"type":"text","url":"42a3dd4f-5e79-41a5-94fc-941e18fc83ad","created":1663330065084,"title":"Definição","order":1,"markdown":"Até então temos tratado apenas de arrays unidimensionais, porém também é possível ter arrays de 2, 3 ou mais dimensões, são os **arrays multidimensionais**. Eles são arrays de arrays! \n\n> Um array de 2 dimensões também é conhecido como **matriz** (ou *matrix* no inglês).\n\n***Importante: É importante saber que existem arrays de várias dimensões, porém nesse curso trataremos apenas de matrizes (arrays de 2 dimensões), que são os casos mais comumente cobrados em entrevistas técnicas.***\n\nAs matrizes também obedecem às mesmas regras dos arrays unidimensionais.\n- É um conjunto de dados do mesmo tipo\n- Tem o tamanho fixo e pré-definido\n- Cada posição na memória é identificada unicamente por índices\n\n![Exemplo de Matriz](https://drive.google.com/uc?export=view&id=1SsnlqGlnLKLIjbnrc0kLqRnpfrclLNYx)\n\n\nPerceba que uma matriz é um conjunto de arrays unidimensionais que são exibidos no formato de linhas e colunas onde a identidade de cada elemento está na combinação de uma linha com uma coluna. Ou seja, na matriz para encontrar um elemento é preciso ter acesso ao par de índices linha x coluna.\n\nVamos ver um pouco de código!\n\n~~~Java\n// declara e instancia uma matriz com 3 linhas e 5 colunas\nint[][] matrix = new int[3][5];\n\n// inserindo valores\nmatrix[0][0] = 5;\nmatrix[1][0] = 13;\nmatrix[0][1] = 12;\nmatrix[1][1] = 4;\n\nint res = matrix[2][4]; \n// res == 21\n~~~\n\nNote que:\n- Na criação da matriz é preciso identificar a quantidade de linhas e a quantidade de colunas.\n- Para inserir um elemento é preciso informar o índice da linha e o índice da coluna.\n- Para consultar um elemento também deve ser informado o par de índices linha x coluna.\n","modified":1663429726602},{"markdown":"Na memória arrays multidimensionais são alocados da mesma maneira que arrays unidimensionais! Portanto, as células são alocadas de maneira sequencial e não da forma tabular como foi exibido anteriormente. Essa demonstração visual tabular server apenas para fins didáticos pois facilita a compreensão do funcionamento das matrizes.\n\n![Alocação de memória de uma matriz](https://drive.google.com/uc?export=view&id=1uQIymDqt9EcvJm6ObnG9MvBTylEeMpaw)\n\n","order":2,"modified":1663504208262,"title":"Matrizes na memória","type":"text","created":1663330890024,"url":"679e8aa3-a31c-47d0-ae11-a7183311e3d1"},{"title":"Mão na massa","type":"text","url":"a9319392-01c4-4201-8bd7-486d9ba01fae","created":1663359930022,"modified":1663503891899,"order":3,"markdown":"Aqui vão alguns exercícios para praticar:\n\n- [LeetCode 1672 - Richest Customer Wealth](https://leetcode.com/problems/richest-customer-wealth/)\n- [LeetCode 1351 - Count Negative Numbers in a Sorted Matrix](https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/)\n\n*Dica: Leia os problemas com atenção para entender o que deve ser feito e pense nas possíveis soluções antes de escrever o código.*"}]